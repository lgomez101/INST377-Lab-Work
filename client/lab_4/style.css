

/* 
  These rules apply to actual HTML elements with no labelling!
  So: they style the tags directly
*/


a {
  display: inline-block;
  text-decoration: none;
  color: #ffffff;
}

h2 {
  margin:0;
  padding:0;
  padding-bottom:1.5rem;
}

form {
  accent-color: hsla(120, 100%, 50%, 0.482);
}

body {
  background-color: rgb(128, 128, 128);
}

.wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0;
  flex: 1;
}

.container {
  margin: 0 20px;
  display: flex;
  justify-content: space-evenly;
  align-items: start;
  flex:1 0 auto;
}

.header {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 1.5rem;
}


/*
  This rule implies that the H1 tag lives within another HTML tag
  It "inherits" some rules from the above
  Those rules won't apply to an h1 that's outside a block with the class of 'header'
*/

.header h1 {
  display: flex;
  /* this will push other blocks out of the way */

  /* colors */
  background-color: #9e0606;
  color: #ffffff;

  /* shapes */
  border-radius: 6px;
  font-size: 1.5rem;
  padding: 1.25rem;
  margin:0; /* removing the margin on h1 tags means the header pins to the top if we move it around */

}

.box {
  background-color: #5f0202;
  border: 2px dashed;
  border-radius: 4px;

  width: fit-content;
  height:fit-content;
  padding: 5rem;
  margin: 0 auto;
}

.box-right {
  background-color: #5f0202;
  border: 2px dashed;
  border-radius: 4px;

  width: fit-content;
  height:fit-content;
  padding: 3rem;
  padding-right: 10rem;
  padding-left: 10rem;
  margin: 0 auto;
}




.left_section {
  background-color: #9e0606;
  flex: 0 1 auto;
  margin: 1rem;
  padding: 1.5rem;
}

.left_section h2, form{
  color: #ffffff;
}

.right_section {
  background-color: #9e0606;
  flex: 1 2 auto;
  margin: 1rem;
  align-items: center;
  max-width: 800px;
}

.right_section h2,p{
  color:#ffffff;
}
.footer {
  padding: 1rem;
  background-color: rgba(139, 0, 0, 0.8);
  font-size: 1.2rem;
  font-weight: 600;
  align-items: baseline;
  flex: 2;
  border-radius: 6px;
  font-size: 1.5rem;
}

.footer a {
  color: rgba(255, 224, 138, 1);
  text-decoration: underline;
}

/*
  This is an example of a 'pseudoclass'
  In this instance, it says what to do if a mouse hovers over a link
  This is pretty desktop-specific, since there's no hover function on touchscreens
*/
.footer a:hover {
  /* Hue, saturation, luminosity, alpha */
  background-color: hsla(0, 0%, 90%, 0.15);
  /* red, green, blue, alpha */
  color: rgb(246, 169, 93);
  text-decoration: none;
}




form input {
    /* This is a hack to make sure our boxes line up with one another nicely */
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;

    /* here we are setting white space correctly */
    margin-bottom: 1rem;
    height: 2rem;
    border-radius: 4px;
  }

  form label {
    width: 100%;
    width: -moz-available;          /* WebKit-based browsers will ignore this. */
    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */
    width: fill-available;
    align-items: flex-start;

    display: block; /* this turns the label text into a box we can set margins on */
    margin-bottom: 0.5rem;
  }

/* How To Write A Media Query For Small Screens */

@media only screen and (max-width: 736px){
    /* Rules in here will only apply when a screen is the correct size */
    /* check it out by using your developer tools to shrink your screen-size */
    .container {
      background-color: rgb(128, 128, 128);
      display: flex;
      flex-direction: column;
      flex-wrap: wrap;
      justify-content: center;
      flex: 0;
    }
    .footer {
      background-color: #9e0606;
      flex: 2;
    }
}